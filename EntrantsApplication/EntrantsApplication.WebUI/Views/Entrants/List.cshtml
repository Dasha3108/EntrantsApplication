@using EntrantsApplication.Domain.Entities
@model IEnumerable<Entrant>

@{
    ViewBag.Title = "List";
}

<head>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-theme.css" rel="stylesheet" />
</head>
<body>
    <div class="panel panel-success">
        <div class="content">
            <h1><a>@Html.ActionLink("Main Menu", "MainMenu")</a></h1>
            @*<table class="table table-bordered table-responsive table-hover">
                        <tr>
                            <th>
                                <div class="text-center">
                                    Name
                                </div>
                            </th>
                            <th>
                                <div class="text-center">
                                    The Date of The Birth
                                </div>
                            </th>
                            <th>
                                <div class="text-center">
                                    Full Information
                                </div>
                            </th>
                            <th></th>
                        </tr>

                        @foreach (var item in Model)
            {
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.DisplayFor(modelItem => item.Name)
                                @Html.DisplayFor(modelItem => item.SecondName)
                                @Html.DisplayFor(modelItem => item.Surname)
                            </div>
                        </td>
                        <td>
                            <div class="text-center">
                                @Html.DisplayFor(modelItem => item.DateOfTheBirth)
                            </div>
                        </td>
                        <td>
                            @using (Html.BeginForm("FullEntrantInformation", "Entrants",
        new { entrantId = item.EntrantId }))
                {
                    <div class="text-center">
                        @Html.HiddenFor(modelItem => item.EntrantId)
                        <input type="submit" class="btn btn-default" value="Watch" />
                    </div>
        }
                        </td>
                        <td>
                            @Html.ActionLink("Show Info Bellow", "List", new { entrantId = item.EntrantId })
                        </td>
                    </tr>
        if (item.SelectedEntrant)
        {
                    <tr>
                        <div class="text-center">
                            <p>Personal Information</p>
                        </div>
                        <div class="form-group">
                            <p>Name: @Html.DisplayFor(x => item.Name, new { @class = "form-control" }) </p>
                        </div>
                        <div class="form-group">
                            <p>Second Name: @Html.DisplayFor(x => item.SecondName, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Surname: @Html.DisplayFor(x => item.Surname, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Date of The Birth: @Html.DisplayFor(x => item.DateOfTheBirth, new { @class = "form-control" }) </p>
                        </div>
                        <div class="form-group">
                            <p>Home Address: @Html.DisplayFor(x => item.HomeAddress, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Mobile Phone: @Html.DisplayFor(x => item.MobilePhone, new { @class = "form-control" })</p>
                        </div>

                        <div class="text-center">
                            <p>Educational Information</p>
                        </div>

                        <div class="form-group">
                            <p>Chosen Speciality: @Html.DisplayFor(x => item.Speciality, new { @class = "form-control" }) </p>
                        </div>
                        <div class="form-group">
                            <p>Finished School Name: @Html.DisplayFor(x => item.School, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Year of Finishing The School: @Html.DisplayFor(x => item.YearOfFinishingTheSchool, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>The Average School Score: @Html.DisplayFor(x => item.AverageSchoolScore, new { @class = "form-control" }) </p>
                        </div>
                        <div class="form-group">
                            <p>Learned Foreign Language: @Html.DisplayFor(x => item.ForeignLanguage, new { @class = "form-control" })</p>
                        </div>
                        <p>Need in dormitory</p>
                        @if (item.NeedsDormitory)
                         {
                            @:In Need
                        }
                        else
                        {
                            @:No Need
                        }

                        <div class="text-center">
                            <p>Privileges</p>
                        </div>
                        <div class="form-group">
                            <p>
                                Do you have privileges: @Html.DropDownListFor(x => item.HasPrivileges, new[] {
        new SelectListItem() {Text = "Yes", Value = bool.TrueString}, new SelectListItem(){Text="No", Value = bool.FalseString} },
        "Choose an option", new { @class = "form-control" })
                            </p>
                        </div>
                        <div class="form-group">
                            <p>
                                Defenition of the Privileges: @Html.DisplayFor(x => item.Privileges, new { @class = "form-control" })
                            </p>
                        </div>

                        <div class="text-center">
                            <p>Entrant's Mother Information</p>
                        </div>

                        <div class="form-group">
                            <p>
                                Mother: @Html.DropDownListFor(x => item.HasMother, new[] {
        new SelectListItem() {Text = "Have got", Value = bool.TrueString}, new SelectListItem(){Text="Haven't got", Value = bool.FalseString} },
        "Choose an option", new { @class = "form-control" })
                            </p>
                        </div>
                        <div class="form-group">
                            <p>Name: @Html.DisplayFor(x => item.MotherName, new { @class = "form-control" }) </p>
                        </div>
                        <div class="form-group">
                            <p>Second Name: @Html.DisplayFor(x => item.MotherSecondName, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Surname: @Html.DisplayFor(x => item.MotherSurname, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Date of The Birth: @Html.DisplayFor(x => item.MotherDateOfTheBirth, new { @class = "form-control" }) </p>
                        </div>
                        <div class="form-group">
                            <p>Home Address: @Html.DisplayFor(x => item.MotherHomeAddress, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Mobile Phone: @Html.DisplayFor(x => item.MotherMobilePhone, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Place of Work: @Html.DisplayFor(x => item.MotherPlaceOfWork, new { @class = "form-control" })</p>
                        </div>

                        <div class="text-center">
                            <p>Entrant's Father Information</p>
                        </div>
                        <div class="form-group">
                            <p>
                                Father: @Html.DropDownListFor(x => item.HasFather, new[] {
        new SelectListItem() {Text = "Have got", Value = bool.TrueString}, new SelectListItem(){Text="Haven't got", Value = bool.FalseString} },
        "Choose an option", new { @class = "form-control" })
                            </p>
                        </div>
                        <div class="form-group">
                            <p>Name: @Html.DisplayFor(x => item.FatherName, new { @class = "form-control" }) </p>
                        </div>
                        <div class="form-group">
                            <p>Second Name: @Html.DisplayFor(x => item.FatherSecondName, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Surname: @Html.DisplayFor(x => item.FatherSurname, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Date of The Birth: @Html.DisplayFor(x => item.FatherDateOfTheBirth, new { @class = "form-control" }) </p>
                        </div>
                        <div class="form-group">
                            <p>Home Address: @Html.DisplayFor(x => item.FatherHomeAddress, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Mobile Phone: @Html.DisplayFor(x => item.FatherMobilePhone, new { @class = "form-control" })</p>
                        </div>
                        <div class="form-group">
                            <p>Place of Work: @Html.DisplayFor(x => item.FatherPlaceOfWork, new { @class = "form-control" })</p>
                        </div>
                    </tr>
        }
        }
                    </table>*@

            @foreach (var item in Model)
    {
        <div style="background-color : #80d4ff" ;>
            <div class="form-group text-center">
                @Html.DisplayFor(modelItem => item.Name)
                @Html.DisplayFor(modelItem => item.SecondName)
                @Html.DisplayFor(modelItem => item.Surname)
            </div>
            <div class="text-center">
                @Html.DisplayFor(modelItem => item.DateOfTheBirth)
            </div>
            @using (Html.BeginForm("FullEntrantInformation", "Entrants",
new { entrantId = item.EntrantId }))
    {
        <div class="text-center">
            @Html.HiddenFor(modelItem => item.EntrantId)
            <input type="submit" class="btn btn-default" value="Watch" />
        </div>
}
            <div class=" text-center">
                @Html.ActionLink("Show Info Bellow", "List", new { entrantId = item.EntrantId })
            </div>
            <p></p>
        </div>

if (item.SelectedEntrant)
{
        <div class="text-center">
            <p>Personal Information</p>
        </div>
        <div class="form-group">
            <p>Name: @Html.DisplayFor(x => item.Name, new { @class = "form-control" }) </p>
        </div>
        <div class="form-group">
            <p>Second Name: @Html.DisplayFor(x => item.SecondName, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Surname: @Html.DisplayFor(x => item.Surname, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Date of The Birth: @Html.DisplayFor(x => item.DateOfTheBirth, new { @class = "form-control" }) </p>
        </div>
        <div class="form-group">
            <p>Home Address: @Html.DisplayFor(x => item.HomeAddress, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Mobile Phone: @Html.DisplayFor(x => item.MobilePhone, new { @class = "form-control" })</p>
        </div>

        <div class="text-center">
            <p>Educational Information</p>
        </div>

        <div class="form-group">
            <p>Chosen Speciality: @Html.DisplayFor(x => item.Speciality, new { @class = "form-control" }) </p>
        </div>
        <div class="form-group">
            <p>Finished School Name: @Html.DisplayFor(x => item.School, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Year of Finishing The School: @Html.DisplayFor(x => item.YearOfFinishingTheSchool, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>The Average School Score: @Html.DisplayFor(x => item.AverageSchoolScore, new { @class = "form-control" }) </p>
        </div>
        <div class="form-group">
            <p>Learned Foreign Language: @Html.DisplayFor(x => item.ForeignLanguage, new { @class = "form-control" })</p>
        </div>
        <p>
            Need in dormitory:
            @if (item.NeedsDormitory)
    {
        @:In Need
}
else
{
        @:No Need
}
        </p>

        <div class="text-center">
            <p>Privileges: </p>
        </div>
        <div class="form-group">
            @if (item.HasPrivileges)
    {
        @Html.DisplayFor(modelItem => item.Privileges);
}
else
{
        <p>The entrant hasn't got any privileges.</p>
        <p></p>
}
            <p>
        </div>

        <div class="text-center">
            <p>Entrant's Mother Information</p>
        </div>

        if (item.HasMother)
{
        <div class="form-group">
            <p>Name: @Html.DisplayFor(x => item.MotherName, new { @class = "form-control" }) </p>
        </div>
        <div class="form-group">
            <p>Second Name: @Html.DisplayFor(x => item.MotherSecondName, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Surname: @Html.DisplayFor(x => item.MotherSurname, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Date of The Birth: @Html.DisplayFor(x => item.MotherDateOfTheBirth, new { @class = "form-control" }) </p>
        </div>
        <div class="form-group">
            <p>Home Address: @Html.DisplayFor(x => item.MotherHomeAddress, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Mobile Phone: @Html.DisplayFor(x => item.MotherMobilePhone, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Place of Work: @Html.DisplayFor(x => item.MotherPlaceOfWork, new { @class = "form-control" })</p>
        </div>
}
        else
        {
            <p>The entrant hasn't got a mother.</p>
        }

        <div class="text-center">
            <p>Entrant's Father Information</p>
        </div>
        if (item.HasFather)
        {
        <div class="form-group">
            <p>Name: @Html.DisplayFor(x => item.FatherName, new { @class = "form-control" }) </p>
        </div>
        <div class="form-group">
            <p>Second Name: @Html.DisplayFor(x => item.FatherSecondName, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Surname: @Html.DisplayFor(x => item.FatherSurname, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Date of The Birth: @Html.DisplayFor(x => item.FatherDateOfTheBirth, new { @class = "form-control" }) </p>
        </div>
        <div class="form-group">
            <p>Home Address: @Html.DisplayFor(x => item.FatherHomeAddress, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Mobile Phone: @Html.DisplayFor(x => item.FatherMobilePhone, new { @class = "form-control" })</p>
        </div>
        <div class="form-group">
            <p>Place of Work: @Html.DisplayFor(x => item.FatherPlaceOfWork, new { @class = "form-control" })</p>
        </div>
         }
         else
          {
               <p> The entrant hasn't got a mother.</p>
           }
                }
            }

        </div>
    </div>

</body>

