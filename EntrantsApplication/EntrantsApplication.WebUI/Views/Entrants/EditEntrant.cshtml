@model EntrantsApplication.Domain.Entities.Entrant

@{
    ViewBag.Title = "Editting an Entrant";
}

<head>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-theme.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="~/Content/Styles.css" />
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script type="text/javascript" src="~/Scripts/SpecialityDropDowns.js"></script>

    <script>
        function AddChosenEntrantSpeciality () {
            var specialityDropDown = document.getElementById("SpecialityDropDown");
            specialityDropDown.innerHTML += "<option>@Model.Speciality</option>";
            specialityDropDown.selectedIndex = 1;
        }
    </script>
</head>
<body onload="AddSpecialities(), showFatherInfo(), showMotherInfo(), showPrivelegesDefenition(),
        AddChosenEntrantSpeciality()">

        <div style="margin-left:32px; margin-right:32px; text-align:justify">
            @using (Html.BeginForm("EditEntrantInformation", "Entrants", Model))
    {
        @Html.ValidationSummary()
        <div style="text-align:center">
            <h2 style="margin-top:20px">Personal Information</h2>
        </div>
        <div class="form-group">
            <p>
                Name:
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
            </p>
            <p>
                Second Name:
                @Html.TextBoxFor(x => x.SecondName, new { @class = "form-control" })
            </p>
            <p>
                Surname:
                @Html.TextBoxFor(x => x.Surname, new { @class = "form-control" })
            </p>
            <p>
                Date of The Birth:
                @Html.TextBoxFor(x => x.DateOfTheBirth, new { @class = "form-control" })
            </p>
            <p>
                Home Address:
                @Html.TextBoxFor(x => x.HomeAddress, new { @class = "form-control" })
            </p>
            <p>
                Mobile Phone:
                @Html.TextBoxFor(x => x.MobilePhone, new { @class = "form-control" })
            </p>
        </div>

        <div class="text-center">
            <h2>Educational Information</h2>
        </div>

        <div class="form-group">
            <p>
                Chosen Speciality:
                <div id="specialityComboboxesDropDowns">
                    <select id="EducationFeeDropDown" style="width:33%"></select>
                    <select id="FacultyDropDown" style="width:33%">
                        <option>Choose an option</option>
                    </select>
                    @Html.DropDownListFor(x => x.Speciality, Enumerable.Empty<SelectListItem>(), "Choose an option",
               new { @id = "SpecialityDropDown", @style = "width:33%" })
                </div>
            </p>
            <div style="float:left; width:50%; padding-right:10px">
                <p>Finished School Name: @Html.TextBoxFor(x => x.School, new { @class = "form-control" })</p>
                <p>Year of Finishing The School: @Html.TextBoxFor(x => x.YearOfFinishingTheSchool, new { @class = "form-control" })</p>
                <p>Learned Foreign Language: @Html.TextBoxFor(x => x.ForeignLanguage, new { @class = "form-control" })</p>
                <p>
                    Do you need a dormitory: @Html.DropDownListFor(x => x.NeedsDormitory, new[] {
new SelectListItem() {Text = "Yes", Value = bool.TrueString}, new SelectListItem(){Text="No", Value = bool.FalseString} },
"Choose an option", new { @class = "form-control" })
                </p>
            </div>
            <div style="float:right; width:50%; padding-left:10px">
                <p>The Average School Score: @Html.TextBoxFor(x => x.AverageSchoolScore, new { @class = "form-control" }) </p>
            </div>
            <div style="clear:both">

            </div>
        </div>


        <div class="text-center">
            <h2>Privileges</h2>
        </div>
        <div class="form-group">
            <p>
                Do you have privileges: @Html.DropDownListFor(x => x.HasPrivileges, new[] {
new SelectListItem() {Text = "Yes", Value = bool.TrueString}, new SelectListItem(){Text="No", Value = bool.FalseString} },
"Choose an option", new { @class = "form-control", @id = "privilegesDropDown", @onchange = "showPrivelegesDefenition()" })
            </p>
            <p id="privilegesDefenition" style="display:none">
                Defenition of the Privileges: @Html.TextBoxFor(x => x.Privileges, new { @class = "form-control" })
            </p>
        </div>

        <div>
            <div style="float:left; width:50%; padding-right:10px">
                <div class="text-center">
                    <h2>Entrant's Mother Information</h2>
                </div>

                <div class="form-group">
                    <p>
                        Mother: @Html.DropDownListFor(x => x.HasMother, new[] {
new SelectListItem() {Text = "Have got", Value = bool.TrueString}, new SelectListItem(){Text="Haven't got", Value = bool.FalseString} },
"Choose an option", new { @class = "form-control", @id = "motherDropDown", @onchange = "showMotherInfo()" })
                    </p>
                    <div id="motherInfo" style="display:none">
                        <p>Name: @Html.TextBoxFor(x => x.MotherName, new { @class = "form-control" }) </p>
                        <p>Second Name: @Html.TextBoxFor(x => x.MotherSecondName, new { @class = "form-control" })</p>
                        <p>Surname: @Html.TextBoxFor(x => x.MotherSurname, new { @class = "form-control" })</p>
                        <p>Date of The Birth: @Html.TextBoxFor(x => x.MotherDateOfTheBirth, new { @class = "form-control" }) </p>
                        <p>Home Address: @Html.TextBoxFor(x => x.MotherHomeAddress, new { @class = "form-control" })</p>
                        <p>Mobile Phone: @Html.TextBoxFor(x => x.MotherMobilePhone, new { @class = "form-control" })</p>
                        <p>Place of Work: @Html.TextBoxFor(x => x.MotherPlaceOfWork, new { @class = "form-control" })</p>
                    </div>
                </div>
            </div>

            <div style="float:right; width:50%; padding-left:10px">
                <div class="text-center">
                    <h2>Entrant's Father Information</h2>
                </div>
                <div class="form-group">
                    <p>
                        Father: @Html.DropDownListFor(x => x.HasFather, new[] {
new SelectListItem() {Text = "Have got", Value = bool.TrueString}, new SelectListItem(){Text="Haven't got", Value = bool.FalseString} },
"Choose an option", new { @class = "form-control", @id = "fatherDropDown", @onchange = "showFatherInfo()" })
                    </p>
                    <div id="fatherInfo" style="display:none">
                        <p>Name: @Html.TextBoxFor(x => x.FatherName, new { @class = "form-control" }) </p>
                        <p>Second Name: @Html.TextBoxFor(x => x.FatherSecondName, new { @class = "form-control" })</p>
                        <p>Surname: @Html.TextBoxFor(x => x.FatherSurname, new { @class = "form-control" })</p>
                        <p>Date of The Birth: @Html.TextBoxFor(x => x.FatherDateOfTheBirth, new { @class = "form-control" }) </p>
                        <p>Home Address: @Html.TextBoxFor(x => x.FatherHomeAddress, new { @class = "form-control" })</p>
                        <p>Mobile Phone: @Html.TextBoxFor(x => x.FatherMobilePhone, new { @class = "form-control" })</p>
                        <p>Place of Work: @Html.TextBoxFor(x => x.FatherPlaceOfWork, new { @class = "form-control" })</p>
                    </div>
                </div>
            </div>
            <div style="clear:both"></div>
        </div>
        <div style="text-align:center">
            <input class="btn-success" type="submit" value="Submit" />
        </div>
       
}
        </div>
</body>

